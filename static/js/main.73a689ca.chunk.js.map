{"version":3,"sources":["atoms.tsx","CreateToDo.tsx","ToDo.tsx","ToDoList.tsx","App.tsx","index.tsx","theme.ts"],"names":["Categories","categoryState","atom","key","default","TO_DO","toDoState","toDoSelector","selector","get","toDos","category","filter","toDo","TODOS_KEY","Form","styled","form","CreateToDo","useRecoilValue","setToDos","useSetRecoilState","useForm","register","handleSubmit","setValue","onSubmit","oldToDos","newToDos","text","id","Date","now","reverse","localStorage","setItem","JSON","stringify","required","placeholder","icon","faPlus","Li","li","Text","p","CategoryBtn","div","Line","ToDo","onClick","newCategory","targetIndex","findIndex","newToDo","slice","DOING","faHourglassStart","faListOl","DONE","faCheck","currentToDo","onDelete","faTrash","Main","Section","section","Title","SubTitle","ToDolist","ul","Selector","Footer","footer","ToDoList","useRecoilState","setCategory","useEffect","loadedToDos","getItem","parse","forEach","pre","length","value","onInput","event","currentTarget","removeItem","map","GlobalStyle","createGlobalStyle","props","theme","textColor","App","ReactDOM","render","StrictMode","bgColor","accentColor","document","getElementById"],"mappings":"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","file":"static/js/main.73a689ca.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\n\nexport interface ITodo {\n  text: string;\n  id: number;\n  category: Categories;\n}\n\n//type categories = \"TO_DO\" | \"DOING\" | \"DONE\";\n\nexport enum Categories {\n  \"TO_DO\",\n  \"DOING\",\n  \"DONE\",\n}\n\nexport const categoryState = atom<Categories>({\n  key: \"category\",\n  default: Categories.TO_DO,\n});\n\nexport const toDoState = atom<ITodo[]>({\n  key: \"todo\",\n  default: [],\n});\n\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: ({ get }) => {\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n    return toDos.filter((toDo) => toDo.category === category);\n  },\n});\n","import { useForm } from \"react-hook-form\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { categoryState, toDoState } from \"./atoms\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const TODOS_KEY = \"toDos\";\n\ninterface IForm {\n  toDo: string;\n}\n\nconst Form = styled.form`\n  display: flex;\n  margin-top: 1.5em;\n  input,\n  button {\n    border-radius: 5px;\n    height: 2rem;\n    color: #fffdfd;\n    border: 0;\n  }\n  input {\n    padding: 0.5em;\n    color: black;\n    width: 80%;\n  }\n  button {\n    margin-left: 0.3rem;\n    width: 20%;\n    border: 1px solid #f37f82;\n    background-color: transparent;\n    transition: all 0.2s ease-in;\n    &:hover {\n      cursor: pointer;\n      background-color: lightpink;\n    }\n  }\n`;\n\nfunction CreateToDo() {\n  const category = useRecoilValue(categoryState);\n  const setToDos = useSetRecoilState(toDoState);\n  const { register, handleSubmit, setValue } = useForm();\n\n  const handleValid = ({ toDo }: IForm) => {\n    setValue(\"toDo\", \"\");\n    setToDos((oldToDos) => {\n      const newToDos = [\n        ...oldToDos,\n        { text: toDo, category, id: Date.now() },\n      ].reverse();\n      const saveToDos = () => {\n        localStorage.setItem(TODOS_KEY, JSON.stringify(newToDos));\n      };\n      saveToDos();\n      return newToDos;\n    });\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(handleValid)}>\n      <input\n        {...register(\"toDo\", { required: \"Please write a To Do\" })}\n        placeholder=\"Write a to do\"\n      />\n      <button>\n        <FontAwesomeIcon icon={faPlus} />\n      </button>\n    </Form>\n  );\n}\n\nexport default CreateToDo;\n","import { useSetRecoilState } from \"recoil\";\nimport { Categories, ITodo, toDoState } from \"./atoms\";\nimport { TODOS_KEY } from \"./CreateToDo\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { faHourglassStart } from \"@fortawesome/free-solid-svg-icons\";\nimport { faListOl } from \"@fortawesome/free-solid-svg-icons\";\n\nimport styled from \"styled-components\";\n\nconst Li = styled.li`\n  padding: 0 0.5em;\n  margin-bottom: 0.5em;\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nconst Text = styled.p`\n  font-size: 1rem;\n`;\n\nconst CategoryBtn = styled.div`\n  button {\n    font-size: 0.8rem;\n    padding: 0.3em;\n    background-color: transparent;\n    border: 0;\n    color: #ffffff;\n    transition: all 0.2s ease-in;\n    &:hover {\n      cursor: pointer;\n      transform: scale(1.2);\n      color: lightpink;\n    }\n  }\n  button:nth-child(2) {\n    margin: 0 0.5em;\n  }\n  button:nth-child(3) {\n  }\n`;\n\nconst Line = styled.div`\n  display: block;\n  width: 100%;\n  height: 1px;\n  background-color: #f37f82;\n  margin-bottom: 1.5rem;\n`;\n\nfunction ToDo({ text, id, category }: ITodo) {\n  const setToDos = useSetRecoilState(toDoState);\n\n  const onClick = (newCategory: Categories) => {\n    setToDos((oldToDos) => {\n      const targetIndex = oldToDos.findIndex((toDo) => toDo.id === id);\n      const newToDo = { text, id, category: newCategory };\n      return [\n        ...oldToDos.slice(0, targetIndex),\n        newToDo,\n        ...oldToDos.slice(targetIndex + 1),\n      ];\n    });\n  };\n\n  const onDelete = (id: number) => {\n    setToDos((currentToDo) => {\n      const newToDos = currentToDo.filter((toDo) => toDo.id !== id);\n      const saveToDos = () => {\n        localStorage.setItem(TODOS_KEY, JSON.stringify(newToDos));\n      };\n      saveToDos();\n      return newToDos;\n    });\n  };\n\n  return (\n    <>\n      <Li>\n        <Text>{text} </Text>\n        <CategoryBtn>\n          {category !== Categories.DOING && (\n            <button onClick={() => onClick(Categories.DOING)}>\n              <FontAwesomeIcon icon={faHourglassStart} />\n            </button>\n          )}\n          {category !== Categories.TO_DO && (\n            <button onClick={() => onClick(Categories.TO_DO)}>\n              <FontAwesomeIcon icon={faListOl} />\n            </button>\n          )}\n          {category !== Categories.DONE && (\n            <button onClick={() => onClick(Categories.DONE)}>\n              <FontAwesomeIcon icon={faCheck} />\n            </button>\n          )}\n          <button onClick={() => onDelete(id)}>\n            <FontAwesomeIcon icon={faTrash} />\n          </button>\n        </CategoryBtn>\n      </Li>\n      <Line />\n    </>\n  );\n}\n\nexport default ToDo;\n","import React, { useEffect } from \"react\";\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport {\n  Categories,\n  categoryState,\n  ITodo,\n  toDoSelector,\n  toDoState,\n} from \"./atoms\";\nimport CreateToDo, { TODOS_KEY } from \"./CreateToDo\";\nimport ToDo from \"./ToDo\";\n\nconst Main = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  min-height: 30rem;\n  max-width: 30rem;\n  margin: auto;\n  background-color: #f04d54;\n  padding: 2em;\n  border-radius: 20px;\n`;\n\nconst Section = styled.section``;\n\nconst Title = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 0.5rem;\n  h1 {\n    font-size: 1.8em;\n    margin-right: 0.5em;\n  }\n  h2 {\n    font-size: 1em;\n  }\n`;\n\nconst SubTitle = styled.p`\n  margin-bottom: 1rem;\n`;\n\nconst Line = styled.div`\n  display: block;\n  width: 100%;\n  height: 1px;\n  background-color: #f37f82;\n  margin-bottom: 1.5rem;\n`;\n\nconst ToDolist = styled.ul`\n  padding: 0 1rem;\n  max-height: 15rem;\n  overflow-y: scroll;\n  scrollbar-color: rebeccapurple green;\n`;\n\nconst Selector = styled.div`\n  margin: 2rem 0;\n  display: flex;\n  justify-content: space-between;\n  button {\n    font-size: 1rem;\n    padding: 0.3em;\n    background-color: transparent;\n    border: 0;\n    color: #ffffff;\n    transition: all 0.2s ease-in;\n    &:hover {\n      cursor: pointer;\n      transform: scale(1.2);\n      color: lightpink;\n    }\n  }\n  select {\n    cursor: pointer;\n    font-size: 0.8rem;\n    padding: 0.3em;\n    border: 1px solid #ffffff;\n    border-radius: 10px;\n  }\n`;\n\nconst Footer = styled.footer``;\n\nconst ToDoList = () => {\n  const setToDos = useSetRecoilState(toDoState);\n  const toDos = useRecoilValue(toDoSelector);\n  const [category, setCategory] = useRecoilState(categoryState);\n\n  const onInput = (event: React.FormEvent<HTMLSelectElement>) => {\n    setCategory(+event.currentTarget.value);\n  };\n\n  const onClear = () => {\n    setToDos([]);\n    localStorage.removeItem(TODOS_KEY);\n  };\n\n  useEffect(() => {\n    const loadedToDos = localStorage.getItem(TODOS_KEY);\n    if (loadedToDos !== null) {\n      const parsedToDos: ITodo[] = JSON.parse(loadedToDos);\n      parsedToDos.forEach((toDo) => {\n        setToDos((pre) => {\n          return [...pre, toDo];\n        });\n      });\n    }\n  }, [setToDos]);\n\n  return (\n    <Main>\n      <Section>\n        <Title>\n          <h1>To Do List</h1>\n          <h2> {`Total : ${toDos.length}`}</h2>\n        </Title>\n        <SubTitle>Get things done, one item at a time.</SubTitle>\n        <Line></Line>\n        <Selector>\n          <select value={category} onInput={onInput}>\n            <option value={Categories.TO_DO}>To Do</option>\n            <option value={Categories.DOING}>Doing</option>\n            <option value={Categories.DONE}>Done</option>\n          </select>\n          <button onClick={onClear}>RSET</button>\n        </Selector>\n\n        <ToDolist>\n          {toDos.map((toDo) => (\n            <ToDo key={toDo.id} {...toDo} />\n          ))}\n        </ToDolist>\n      </Section>\n      <Footer>\n        <CreateToDo />\n      </Footer>\n    </Main>\n  );\n};\n\nexport default ToDoList;\n","import React from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport ToDoList from \"./ToDoList\";\n\nconst GlobalStyle = createGlobalStyle`\n  html, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\n\n*{\n\tbox-sizing: border-box;\n}\n\nbody {\n\tpadding: 0.5rem;\n\tmargin-top: 5rem;\n\tcolor: ${(props) => props.theme.textColor};\n\tbackground-color: #F5EDEE;\n\tcolor: #FFFDFD;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <ToDoList />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { theme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"#f5f6fa\",\n  accentColor: \"#c23616\",\n};\n"],"sourceRoot":""}